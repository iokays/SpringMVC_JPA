<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.0.xsd">

    <beans:description>SpringSecurity安全配置</beans:description>

    <!-- 页面标签权限功能依赖 -->
    <beans:bean id="webInvocationFilter"
                class="org.springframework.security.web.access.DefaultWebInvocationPrivilegeEvaluator">
        <beans:constructor-arg name="securityInterceptor" ref="customSecurityInterceptor"/>
    </beans:bean>

    <http auto-config="true">
        <custom-filter ref="customSecurityInterceptor" before="FILTER_SECURITY_INTERCEPTOR"/>
        <access-denied-handler ref="customAccessDeniedHandler"/>
    </http>


    <!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager, securityMetadataSource三个属性。-->
    <beans:bean id="customSecurityInterceptor" class="com.iokays.security.manager.CustomFilterSecurityInterceptor">
        <beans:property name="authenticationManager" ref="customAuthenticationManager"/>
        <beans:property name="accessDecisionManager" ref="customAccessDecisionManager"/>
        <beans:property name="securityMetadataSource" ref="customSecurityMetadataSource"/>

    </beans:bean>

    <!-- 注意能够为authentication-manager 设置alias别名  -->
    <authentication-manager alias="customAuthenticationManager">
        <authentication-provider user-service-ref="userDetailsManager">
        </authentication-provider>
    </authentication-manager>

    <beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>

</beans:beans>