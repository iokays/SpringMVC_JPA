<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
    xmlns:beans="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-3.1.xsd">
	
	<beans:description>SpringSecurity安全配置</beans:description>
	
	<http pattern="/frame/**" security="none"/>
	
 	<http auto-config="true">
		<custom-filter ref="customFilter" before="FILTER_SECURITY_INTERCEPTOR"/> 
	</http>
	
	<!-- 一个自定义的filter，必须包含authenticationManager,accessDecisionManager, securityMetadataSource三个属性。-->
	<beans:bean id="customFilter" class="com.iokays.security.manager.CustomFilterSecurityInterceptor">
		<beans:property name="authenticationManager" ref="customAuthenticationManager"/>
		<beans:property name="accessDecisionManager" ref="customAccessDecisionManager"/>
		<beans:property name="securityMetadataSource" ref="customSecurityMetadataSource"/>
	</beans:bean>
	
	<!-- 注意能够为authentication-manager 设置alias别名  -->
	<authentication-manager alias="customAuthenticationManager">
		<authentication-provider user-service-ref="userDetailsManager">
		</authentication-provider>
	</authentication-manager>
	
	<beans:bean id="passwordEncoder" class="org.springframework.security.authentication.encoding.ShaPasswordEncoder"/>
	
	<!-- 访问决策器，决定某个用户具有的角色，是否有足够的权限去访问某个资源  [注解已实现]  -->
	<!-- <beans:bean id="customAccessDecisionManager" class="com.iokays.security.manager.CustomAccessDecisionManager" /> -->

	<!-- 资源源数据定义，将所有的资源和权限对应关系建立起来，即定义某一资源可以被哪些角色去访问。[注解已实现] -->
	<!-- <beans:bean id="customSecurityMetadataSource" init-method="loadResourceDefine" class="com.iokays.security.manager.CustomInvocationSecurityMetadataSourceService" >
		<beans:property name="authorityRepository" ref="authorityRepository" />  
        <beans:property name="resourceRepository" ref="resourceRepository" />
	</beans:bean> -->
	
	<!-- [注解已实现] -->
	<!-- <beans:bean id="userDetailsManager" class="com.iokays.security.manager.UserDetailsManager"/> -->
	
  
</beans:beans>